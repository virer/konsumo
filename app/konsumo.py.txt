#!/usr/bin/env python3
######################
# S.CAPS Mar 2023
# Konsumo
######################

# Logging level
DEBUG = True

from flask import Flask, render_template, redirect, url_for, request, jsonify, copy_current_request_context, abort
from flask_login import LoginManager, current_user, login_required, login_user, logout_user
from flask_sqlalchemy import SQLAlchemy
from jinja2 import TemplateNotFound
from oauthlib.oauth2 import WebApplicationClient
import os, copy, json, requests


app = Flask(__name__, static_url_path='/konsumo/static')
app.secret_key = os.environ.get("SECRET_KEY") or os.urandom(24)
app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0

# Configuration
HOST = os.getenv("HOST", "127.0.0.1")
PORT = os.getenv("PORT", "8080")
GOOGLE_CLIENT_ID = os.environ.get("GOOGLE_CLIENT_ID", None)
GOOGLE_CLIENT_SECRET = os.environ.get("GOOGLE_CLIENT_SECRET", None)
GOOGLE_DISCOVERY_URL = ("https://accounts.google.com/.well-known/openid-configuration")


app.config["SQLALCHEMY_DATABASE_URI"] = 'mysql+pymysql://{}:{}@{}/{}'.format(
    os.getenv('DBUSER', 'root'),
    os.getenv('DBPASS', 'password'),
    os.getenv('DBHOST', '127.0.0.1'),
    os.getenv('DBNAME', 'konsumo')
    )
from app.auth.models import *
db = SQLAlchemy(app)

# Create Table if not exist
with app.app_context():
    from app.auth.models import User, User_Data
    try:
        db.create_all()
        db.session.commit()
    except Exception as e:
        print(e)
        pass
        
    db.session.add(User(0, 'admin', 'admin', 'admin@example.com', 'img'))
    db.session.add(User(1, 'guest', 'admin', 'guest@example.com', 'img'))

    users = User.query.all()
    print(users)





if __name__ == "__main__":
    # SSL Mode
    app.run(host=HOST, port=int(PORT), ssl_context="adhoc", debug=DEBUG)
    # No SSL (usage with gunicorn)
    # app.run(host=HOST, port=int(PORT), debug=DEBUG)
